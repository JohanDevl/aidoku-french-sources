name: Deploy Icons to gh-pages

on:
  push:
    branches:
      - main
    paths:
      - "src/**/res/Icon.png"
      - "src/**/res/source.json"

concurrency:
  group: deploy-icons-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploy-icons:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout main branch
      uses: actions/checkout@v4
      with:
        ref: main
    -
      name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages-site
    -
      name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    -
      name: Update icons in gh-pages
      run: |
        cd gh-pages-site
        
        # Create icons directory if it doesn't exist
        mkdir -p icons
        
        # Function to extract info from source.json
        extract_source_info() {
          local source_json="$1"
          if [ -f "$source_json" ]; then
            local id=$(jq -r '.info.id' "$source_json" 2>/dev/null || echo "")
            local version=$(jq -r '.info.version' "$source_json" 2>/dev/null || echo "")
            echo "$id:$version"
          fi
        }
        
        # Copy icons from main branch source code
        # Individual sources (fr.*)
        for src in ../src/rust/fr.*; do
          if [ -d "$src/res" ]; then
            source_info=$(extract_source_info "$src/res/source.json")
            if [ -n "$source_info" ] && [ "$source_info" != ":" ]; then
              id=$(echo "$source_info" | cut -d':' -f1)
              version=$(echo "$source_info" | cut -d':' -f2)
              if [ -f "$src/res/Icon.png" ] && [ -n "$id" ] && [ -n "$version" ]; then
                echo "Updating icon for $id version $version"
                cp "$src/res/Icon.png" "icons/${id}-v${version}.png"
              fi
            fi
          fi
        done
        
        # Template sources
        for template in ../src/rust/*/sources/*; do
          if [ -d "$template/res" ]; then
            source_info=$(extract_source_info "$template/res/source.json")
            if [ -n "$source_info" ] && [ "$source_info" != ":" ]; then
              id=$(echo "$source_info" | cut -d':' -f1)
              version=$(echo "$source_info" | cut -d':' -f2)
              if [ -f "$template/res/Icon.png" ] && [ -n "$id" ] && [ -n "$version" ]; then
                echo "Updating icon for $id version $version"
                cp "$template/res/Icon.png" "icons/${id}-v${version}.png"
              fi
            fi
          fi
        done
        
        echo "Updated icons:"
        ls -la icons/ || echo "No icons found"
        
        # Check if there are changes
        if [ -n "$(git status --porcelain)" ]; then
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add icons/
          git commit -m "Update source icons"
          git push
          echo "Icons updated successfully"
        else
          echo "No icon changes detected"
        fi